{
  "GlobalConfiguration": {
    "BaseUrl": "http://localhost:50600",
    "ServiceDiscoveryProvider": {
      "Scheme": "http",
      "Host": "10.2.118.50",
      "Port": 8500,
      "Type": "Consul"
    }
  },
  "Routes": [
    {
      "DownstreamPathTemplate": "/{url}",
      "DownstreamScheme": "http",
      "ServiceName": "servicea",
      "UseServiceDiscovery": true,
      //"DownstreamHostAndPorts": [
      //  {
      //    "Host": "localhost",
      //    "Port": 50601
      //  }
      //],
      "UpstreamPathTemplate": "/servicea/{url}",
      "UpstreamHttpMethod": [ "Get" ],
      //Ocelot has RoundRobin and LeastConnection algorithms that can be used. 
      //If a load balance is not specified, ocelot will no make a load balance request.
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "ReRoutesCaseSensitive": false,
      "RateLimitOptions": {
        "ClientWhitelist": [],
        "EnableRateLimiting": true,
        "Period": "5s",
        "PeriodTimespan": 5,
        "Limit": 5
      },
      // Install-Package Ocelot.Provider.Polly
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 5000,
        "TimeoutValue": 5000
      },
      // Install-Package Ocelot.Cache.CacheManager
      "FileCacheOptions": {
        "TtlSeconds": 15,
        "Region": "servicea"
      }
    },

    {
      "DownstreamPathTemplate": "/{url}",
      "DownstreamScheme": "http",
      "ServiceName": "serviceb",
      "UseServiceDiscovery": true,
      //"DownstreamHostAndPorts": [
      //  {
      //    "Host": "localhost",
      //    "Port": 50602
      //  }
      //],
      "UpstreamPathTemplate": "/serviceb/{url}",
      "UpstreamHttpMethod": [ "Get" ],
      //Ocelot has RoundRobin and LeastConnection algorithms that can be used. 
      //If a load balance is not specified, ocelot will no make a load balance request.
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "ReRoutesCaseSensitive": false,
      "RateLimitOptions": {
        "ClientWhitelist": [],
        "EnableRateLimiting": true,
        "Period": "5s",
        "PeriodTimespan": 5,
        "Limit": 5
      },
      // Install-Package Ocelot.Provider.Polly
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 3,
        "DurationOfBreak": 5000,
        "TimeoutValue": 5000
      },
      // Install-Package Ocelot.Cache.CacheManager
      "FileCacheOptions": {
        "TtlSeconds": 15,
        "Region": "serviceb"
      }
    }
  ]
}